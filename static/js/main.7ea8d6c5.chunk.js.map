{"version":3,"sources":["components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["TextForm","props","useState","text","setText","color","backgroundColor","myStyle","className","style","onClick","e","preventDefault","heading","placeholder","rows","value","id","onChange","target","res","toUpperCase","document","querySelector","select","navigator","clipboard","writeText","newText","split","join","length","App","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"8OAkGeA,MAhGf,SAAkBC,GAEd,IAsBA,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAKJ,EAAyBF,mBAAS,CAC9BG,MAAM,OACNC,gBAAgB,SAFpB,mBAAOC,EAAP,KAkCI,OAlCJ,KAmCQ,8BACI,sBAAKC,UAAU,qBAAqBC,MAAOF,EAA3C,UACI,qBAAKC,UAAU,aAIf,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,YAAf,SACI,uBAAME,QApDH,SAACC,GACpBA,EAAEC,kBAmDc,UACI,6BAAKX,EAAMY,UACX,0BAAUC,YAAY,aAAaC,KAAK,KAAKC,MAAOb,EAAMc,GAAG,WAAWT,UAAU,eAAeU,SAnExG,SAACP,GACdP,EAAQO,EAAEQ,OAAOH,UAmEG,wBAAQR,UAAU,wBAAwBE,QAzEhD,WACd,IAAIU,EAAMjB,EAAKkB,cACfjB,EAAQgB,IAuEY,kCAEA,wBAAQZ,UAAU,4BAA4BE,QA/DrD,WAEbN,EADc,MA8DM,mBACA,wBAAQI,UAAU,4BAA4BE,QA5C3D,WACX,IAAIP,EAAOmB,SAASC,cAAc,aAClCpB,EAAKqB,SACLC,UAAUC,UAAUC,UAAUxB,EAAKa,QAyCX,uBACA,wBAAQR,UAAU,4BAA4BE,QAvCxD,WACd,IAAIkB,EAAQzB,EAAK0B,MAAM,QACvBzB,EAAQwB,EAAQE,KAAM,MAqCE,+BAGR,sBAAKtB,UAAU,iBAAf,UACI,mDACA,8BAAIL,EAAK0B,MAAM,KAAKE,OAApB,aAAsC5B,EAAK4B,OAA3C,kBACA,8BAAI,KAAQ5B,EAAK0B,MAAM,KAAKE,OAA5B,uBAEJ,sBAAKvB,UAAU,YAAf,UACI,8CACA,4BAAIL,gB,ICnFtB6B,E,4JACJ,WACE,OACE,mCAIA,cAAC,EAAD,CAAUnB,QAAQ,oC,GAPNoB,IAAMC,WAcTF,ICVAG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxB,SAASyB,eAAe,SAM1BZ,M","file":"static/js/main.7ea8d6c5.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction TextForm(props) {\r\n\r\n    const convertUp = () => {\r\n        let res = text.toUpperCase();\r\n        setText(res);\r\n    }\r\n\r\n    const changeUp = (e) => {\r\n        setText(e.target.value)\r\n    }\r\n    const darkmode = () => {\r\n\r\n    }\r\n\r\n    const clearbtn = () => {\r\n        let newText = ' ';\r\n        setText(newText)\r\n    }\r\n\r\n\r\n    const preventDefault = (e) => {\r\n        e.preventDefault()\r\n    }\r\n\r\n    const [text, setText] = useState(\"\");\r\n    // console.log(text)\r\n\r\n    \r\n\r\nconst [myStyle,newStyle]=useState({\r\n    color:\"gray\",\r\n    backgroundColor:\"#eee\"\r\n})     \r\n\r\nconst copyText=()=>{\r\n    let text = document.querySelector(\"#textarea\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value)\r\n}\r\n\r\nconst removeSpace=()=>{\r\n    let newText=text.split(/[ ]+/);\r\n    setText(newText.join((\"\")))\r\n}\r\n\r\n// dark mode\r\n\r\nconst darkMode=()=>{\r\n    if(myStyle.color==\"gray\"){\r\n        newStyle({\r\n            color:\"red\",\r\n            backgroundColor:\"#000\"\r\n        }) \r\n        let moon=document.querySelector(\"#moon\").style.display=\"none\";\r\n    }else{\r\n        newStyle({\r\n            color:\"gray\",\r\n            backgroundColor:\"#eee\"\r\n        }) \r\n        let moon=document.querySelector(\"#moon\").style.display=\"block\";\r\n    }\r\n}\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container mt-5 p-3\" style={myStyle}>\r\n                <div className=\"darkmode\">\r\n                    {/* <i className=\"far fa-sun\" id=\"moon\" onClick={darkMode} /> */}\r\n                    {/* <i className=\"far fa-moon\" ></i> */}\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <form onClick={preventDefault}>\r\n                            <h3>{props.heading}</h3>\r\n                            <textarea placeholder=\"WRITE TEXT\" rows=\"10\" value={text} id=\"textarea\" className=\"form-control\" onChange={changeUp} />\r\n                            <button className=\"btn btn-primary mt-3 \" onClick={convertUp}>CONVERT TO UPPERCASE</button>\r\n                            {/* <button className=\"btn btn-primary mt-3 \" onClick={convertToTitle}>CONVERT TO TITLE CASE</button>     */}\r\n                            <button className=\"btn btn-primary mt-3 mx-2\" onClick={clearbtn}>CLEAR</button>\r\n                            <button className=\"btn btn-primary mt-3 mx-2\" onClick={copyText}>COPY TEXT</button>\r\n                            <button className=\"btn btn-primary mt-3 mx-2\" onClick={removeSpace}>REMOVE SPACE</button>\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"col-md-12 my-4\">\r\n                        <h2>Your text summary</h2>\r\n                        <p>{text.split(\" \").length}Words a d {text.length} characters.</p>\r\n                        <p>{0.008 * text.split(\" \").length} Minutes read.</p>\r\n                    </div>\r\n                    <div className=\"col-md-12\">\r\n                        <h2>Preview Text</h2>\r\n                        <p>{text}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default TextForm;","import React from 'react';\nimport './App.css';\nimport TextFrom from './components/TextForm';\nimport Navbar from './components/Navbar';\nimport About from './components/About';\n// import {BrowserRouter,Route,Routes} from 'react-router-dom';\n\n// let logo = prompt(\"please enter site logo name\");\nclass App extends React.Component {\n  render() {\n    return (\n      <>\n      {/* <Navbar title=\"logo\" link=\"home\" link1=\"about\"/> */}\n      {/* <Navbar title=\"\" link=\"\" link1=\"\"/> */}\n      {/* <Navbar/> */}\n      <TextFrom heading=\"Enter The Text To Analyze\"/>\n      {/* <About/> */}\n      </>\n    )\n  }\n}\n\nexport default App;\n\n\n// function App() {\n//   return (\n//     <div classNameName=\"App\">\n//      <h1>hello</h1>\n//     </div>\n//   );\n// }\n\n// REACT  FUNCTION COMPONENT ------------------------------------------------\n\n// const Fun=()=>{\n//   return(\n//     <h1>HELLO WAJID</h1>  \n//   )\n// }\n\n// REACT className COMPONENT ------------------------------------------------\n// className Fun extends React.Component{\n//   render(){\n//     return(\n//        <h1>HELLO WAJID</h1>  \n//     )\n//   }\n// }\n\n// HOW TO PASS PROPS IN FUNCTION COMPONENT\n\n// const Fun=(props)=>{\n//   return(\n//   <h1>{props.name}</h1>  \n//   )\n// }\n\n// HOW TO PASS PROPS IN className COMPONENT\n// in className function no need to pass props just use this keyword\n\n// className Fun extends React.Component{\n//   render(){\n//     return(\n//       <div>\n//         <h1>{this.props.name}</h1>  \n//         <h1>{this.props.state}</h1>  \n//         <h1>{this.props.children}</h1>  \n//       </div>\n//   )\n//   }\n\n// }\n\n// REACT className FUNCTION ------------------------------------------------\n\n// className App extends React.Component{\n//   render(){\n//       return (\n//     <div classNameName=\"App\">\n\n//        <Fun name=\"wajid\" state=\"sitting\"/>\n//        <Fun name=\"moiz\" state=\"working\">HELLO</Fun>\n//        <Fun name=\"hunain\" state=\"learning\"/>\n\n//     </div>\n//   )\n//   }\n\n// }\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}